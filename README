# Boot-Gear
Written in NextJS, with react-bootstrap & emotionJS behind the scenes.\
Uses doT.js for templating html strings

- Countinous Build & Deployment on Netlify, with rewrite rules to Firebase Storage.
- Authentication with Firebase Authentication
- Transient Datastore with Firebase Realtime Database

## Build [Configuration: next.config.js]
Added `raw-loader` plugin to import raw .html files

## Deployment [Configuration: netlify.toml]
Rewrites to secondary location for `/blog` (other URI) and Terniary Location (Firebase Storage) for `/:slug`

# Firebase [Configation: config/firebase.json]
- Firebase Authentication
  - Manage Users (only Email)
- Firebase Realtime Database
  - subs/$email: Subscriber Information
  - /users/$user_id: User Information
    - /sites/$slug/timeStamp: Last Access TimeStamp to verify ownership
```
{
  "rules": {
    "subs": {
      ".read": true,
      ".write": true
    },
    "users": {
      "$user_id": {
        ".read": "$user_id === auth.uid",
        ".write": "$user_id === auth.uid"
      }
    }
  }
}
```
- Firebase Storage
  - /public: Read Access to All, Write Access to Logged in
    - /_bin: To be used to store common misc asset files
    - /$slug
      - /index.html: End-Point for Terniary Location for `/:slug`
      - /_bin: Supporting Assets for Terniary Location
```
service firebase.storage {
  match /b/{bucket}/o {
  	match /internal/{bootgear=**} {
      allow read,write: if request.auth != null;
    }
    match /public/{bootgear=**} {
    	allow read;
      allow write: if request.auth != null && (resource == null || (resource.metadata == null || resource.metadata.owner == request.auth.uid));
    }
  }
}
```

# To-do
- Subscription Alerts
- Internationalisation
- Verbose Error Reporting ( eliminate alert/confirm )

# Issues:
- 404 Routes for `/:slug` fallback to Terniary Location (Firebase Storage) with a JSON response
- Flush Primary CDN (Netlify) for Terniary (Firebase Storage) updates
