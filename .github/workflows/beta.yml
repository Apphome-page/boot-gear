name: BETA_FIREBASE

on:
  push:
    branches: [ beta ]

jobs:
  deploy:
    name: DEPLOY_FIREBASE
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Firebase Dependencies
        run: npm install
        working-directory: functions
      - name: Firebase Config
        run: cp ./firebase.dev.json ./firebase.json
      - name: Load dotenv
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env.development
      - name: Set Firebase Config
        uses: w9jds/firebase-action@master
        with:
          args: functions:config:set aws.id=${{ secrets.BETA_AWS_ID }} aws.key=${{ secrets.BETA_AWS_KEY }} cf.id=${{secrets.BETA_CF_ID}} cf.email=${{secrets.BETA_CF_EMAIL}} cf.key=${{secrets.BETA_CF_KEY}} cf.token=${{secrets.BETA_CF_TOKEN}} pabbly.username=${{ secrets.BETA_PABBLY_USERNAME }} pabbly.password=${{ secrets.BETA_PABBLY_PASSWORD }} pabbly.silver=${{ GITHUB_ENV.NEXT_PUBLIC_PABBLY_PLAN_SILVER }} pabbly.gold=${{ GITHUB_ENV.NEXT_PUBLIC_PABBLY_PLAN_GOLD }}
        env:
          FIREBASE_TOKEN: ${{ secrets.BETA_FIREBASE_TOKEN }}
          PROJECT_ID : ${{ secrets.BETA_FIREBASE_PROJECT}}
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.BETA_FIREBASE_TOKEN }}
          PROJECT_ID : ${{ secrets.BETA_FIREBASE_PROJECT}}
